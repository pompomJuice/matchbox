#!/usr/bin/env bash
set -e

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
ASSETS_DIR="${ASSETS_DIR:-$PWD/examples/assets}"
source "${DIR}/common"

main() {
  cleanup
  ./scripts/get-kubectl
  ./scripts/tls/k8s-certgen -d $ASSETS_DIR/tls
  ./scripts/devnet create k8s
  ./scripts/libvirt create

  until kubelet "node1.example.com" \
    && kubelet "node2.example.com" \
    && kubelet "node3.example.com"
  do
    sleep 10
    echo "Waiting for Kubelets to start..."
  done

  until curl --silent -k "https://node1.example.com:443" > /dev/null
  do
    sleep 10
    echo "Waiting for the Kubernetes API..."
  done

  until [[ "$(readyNodes)" == "3" ]]; do
    sleep 5
    echo "$(readyNodes) of 3 nodes are Ready..."
  done

  echo "Getting nodes..."
  k8s get nodes

  sleep 10
  echo "Getting pods..."
  k8s get pods --all-namespaces

  echo "k8s cluster came up!"
  echo

  rm -rf $ASSETS_DIR/tls
  cleanup
}

k8s() {
  ./bin/kubectl --kubeconfig=$ASSETS_DIR/tls/kubeconfig "$@"
}

# ready nodes returns the number of Ready Kubernetes nodes
readyNodes() {
  k8s get nodes -o template --template='{{range .items}}{{range .status.conditions}}{{if eq .type "Ready"}}{{.}}{{end}}{{end}}{{end}}' | grep -o -E True | wc -l
}

main $@
